{"version":3,"file":"component---src-pages-index-jsx-e4033df1ccc0fd3a8ea0.js","mappings":"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AC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,SACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAeWC,GAAe,CAAC,MAAO,SAAU,QAAS,YCxE1CC,GAAW,CACtB7kD,KAAM,WACNu6C,SAsCF,SAA0BP,EAASC,EAAI0C,GACrC,MAAM94C,EAAOwC,KAEb,IAAIg7C,EAEAyD,EAEA/+C,EAEA2H,EAEAq3C,EACJ,OAYA,SAAen6C,GAEb,OAaF,SAAgBA,GAId,OAHAovC,EAAQI,MAAM,YACdJ,EAAQI,MAAM,gBACdJ,EAAQK,QAAQzvC,GACTuR,CACT,CAlBS28B,CAAOluC,EAChB,EAiCA,SAASuR,EAAKvR,GACZ,OAAa,KAATA,GACFovC,EAAQK,QAAQzvC,GACTo6C,GAEI,KAATp6C,GACFovC,EAAQK,QAAQzvC,GAChBk6C,GAAa,EACNG,GAEI,KAATr6C,GACFovC,EAAQK,QAAQzvC,GAChBy2C,EAAS,EAMFx9C,EAAKi4C,UAAY7B,EAAKiL,GAI3BhM,GAAWtuC,IACbovC,EAAQK,QAAQzvC,GAEhB7E,EAAS6B,OAAOkyC,aAAalvC,GACtB6oC,GAEFkJ,EAAI/xC,EACb,CAgBA,SAASo6C,EAAgBp6C,GACvB,OAAa,KAATA,GACFovC,EAAQK,QAAQzvC,GAChBy2C,EAAS,EACF8D,GAEI,KAATv6C,GACFovC,EAAQK,QAAQzvC,GAChBy2C,EAAS,EACT3zC,EAAQ,EACD03C,GAILlM,GAAWtuC,IACbovC,EAAQK,QAAQzvC,GAChBy2C,EAAS,EAGFx9C,EAAKi4C,UAAY7B,EAAKiL,GAExBvI,EAAI/xC,EACb,CAYA,SAASu6C,EAAkBv6C,GACzB,OAAa,KAATA,GACFovC,EA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","sources":["webpack://shijima-makana-publish/./node_modules/extend/index.js","webpack://shijima-makana-publish/./src/components/layout.jsx","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/bind.js","webpack://shijima-makana-publish/./node_modules/axios/lib/utils.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/AxiosError.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/toFormData.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/buildURL.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/InterceptorManager.js","webpack://shijima-makana-publish/./node_modules/axios/lib/defaults/transitional.js","webpack://shijima-makana-publish/./node_modules/axios/lib/platform/browser/index.js","webpack://shijima-makana-publish/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://shijima-makana-publish/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://shijima-makana-publish/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://shijima-makana-publish/./node_modules/axios/lib/platform/common/utils.js","webpack://shijima-makana-publish/./node_modules/axios/lib/platform/index.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://shijima-makana-publish/./node_modules/axios/lib/defaults/index.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/transformData.js","webpack://shijima-makana-publish/./node_modules/axios/lib/cancel/isCancel.js","webpack://shijima-makana-publish/./node_modules/axios/lib/cancel/CanceledError.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/cookies.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/buildFullPath.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/combineURLs.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/speedometer.js","webpack://shijima-makana-publish/./node_modules/axios/lib/adapters/xhr.js","webpack://shijima-makana-publish/./node_modules/axios/lib/adapters/adapters.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/null.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/settle.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/dispatchRequest.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/mergeConfig.js","webpack://shijima-makana-publish/./node_modules/axios/lib/env/data.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/validator.js","webpack://shijima-makana-publish/./node_modules/axios/lib/core/Axios.js","webpack://shijima-makana-publish/./node_modules/axios/lib/cancel/CancelToken.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://shijima-makana-publish/./node_modules/axios/lib/axios.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/spread.js","webpack://shijima-makana-publish/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/estree-util-is-identifier-name/lib/index.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/schema.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/merge.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/normalize.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/info.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/types.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/defined-info.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/create.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xlink.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xml.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xmlns.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/aria.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/html.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/svg.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/index.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/find.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/hast-to-react.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-stringify-position/lib/index.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/vfile-message/lib/index.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://shijima-makana-publish/./node_modules/comma-separated-tokens/index.js","webpack://shijima-makana-publish/./node_modules/space-separated-tokens/index.js","webpack://shijima-makana-publish/./node_modules/html-url-attributes/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-chunked/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-subtokenize/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-combine-extensions/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-character/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-factory-space/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/initialize/content.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/initialize/document.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/content.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/initialize/text.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-resolve-all/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/list.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-factory-destination/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-factory-label/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-factory-title/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-factory-whitespace/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-normalize-identifier/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/definition.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-html-tag-name/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://shijima-makana-publish/./node_modules/decode-named-character-reference/index.dom.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-classify-character/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/attention.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/constructs.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/parse.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/preprocess.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-decode-string/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-from-markdown/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark/lib/postprocess.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://shijima-makana-publish/./node_modules/@ungap/structured-clone/esm/types.js","webpack://shijima-makana-publish/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://shijima-makana-publish/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://shijima-makana-publish/./node_modules/@ungap/structured-clone/esm/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/micromark-util-sanitize-uri/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/footer.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/unist-util-is/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/unist-util-visit-parents/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/unist-util-position/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/revert.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://shijima-makana-publish/./node_modules/trim-lines/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/state.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/remark-rehype/lib/index.js","webpack://shijima-makana-publish/./node_modules/bail/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/is-plain-obj/index.js","webpack://shijima-makana-publish/./node_modules/trough/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/vfile-message/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","webpack://shijima-makana-publish/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://shijima-makana-publish/./node_modules/react-markdown/lib/index.js","webpack://shijima-makana-publish/./src/components/fetchLatestMdOne.jsx","webpack://shijima-makana-publish/./src/pages/index.jsx","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://shijima-makana-publish/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import React from 'react';\nimport './global.scss';\n\nconst Layout = ({children}) => {\n  return (\n    <div>\n      {children}\n    </div>\n  );\n}\n\nexport default Layout;","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.7\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n\n        if (!err.stack) {\n          err.stack = stack;\n          // match without the 2 top stack lines\n        } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n          err.stack += '\\n' + stack\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","import axios from \"axios\";\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nconst FetchLatestMdOne = () => {\n  const [fileData, setFileData] = useState(null);\n\n  // GitHubリポジトリ内のファイルを再帰的に取得する関数\n  const fetchFiles = async (url) => {\n    let allMdFiles = [];\n    const queue = [url];\n\n    while (queue.length > 0) {\n      const currentUrl = queue.shift();\n      const response = await axios.get(currentUrl);\n      const files = response.data;\n\n      for (const file of files) {\n        if (file.type === 'file' && file.name.endsWith('.md')) {\n          allMdFiles.push(file);\n        } else if (file.type === 'dir') {\n          queue.push(file.url); // サブディレクトリをキューに追加\n        }\n      }\n    }\n\n    return allMdFiles;\n  };\n\n  // コンポーネントのマウント時にファイルを取得\n  useEffect(() => {\n    const baseApiUrl = `https://api.github.com/repos/semilemons/ShijimaMakana-Publish/contents/markdown-pages`;\n    fetchFiles(baseApiUrl)\n      .then(mdFiles => {\n        if (mdFiles.length === 0) {\n          throw new Error('Markdownファイルが見つかりません。');\n        }\n        // 取得したファイルの中から最新のファイルを選択\n        const latestFile = mdFiles.reduce((a, b) => (a.name > b.name ? a : b));\n        return axios.get(latestFile.download_url);\n      })\n      .then(response => {\n        setFileData(response.data); // ファイルの内容をセット\n      })\n      .catch(error => {\n        console.error(error);\n        // エラーハンドリング\n      });\n  }, []);\n\n  return (\n    <div>\n      {fileData ? (\n        // <pre></pre>\n        <ReactMarkdown>{fileData}</ReactMarkdown>\n      ) : (\n        <p>データを読み込んでいます...</p> // ローディングメッセージ\n      )}\n    </div>\n  );\n};\n\nexport default FetchLatestMdOne;\n","\nimport Layout from '../components/layout';\nimport React from 'react';\n\nimport FetchLatestMdOne from '../components/fetchLatestMdOne';\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <FetchLatestMdOne />\n    </Layout>\n  );\n}\n\nexport const Head = () => {\n  return (\n    <>\n      <meta charSet=\"utf-8\" />\n      <title>My name is Makana!!</title>\n    </>\n  );\n };\n\nexport default IndexPage;\n\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\nexports.default = StyleToObject;\n//# sourceMappingURL=index.js.map"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","_ref","children","React","bind","fn","thisArg","apply","getPrototypeOf","kindOf","cache","create","thing","str","slice","toLowerCase","kindOfTest","type","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","val","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","forEach","allOwnKeys","l","keys","getOwnPropertyNames","len","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","ret","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","isBuffer","isFormData","kind","FormData","append","isArrayBufferView","result","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","this","assignValue","targetKey","a","b","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","push","hasOwnProp","freezeMethods","set","Error","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","m","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","generateString","size","alphabet","Math","random","isSpecCompliantForm","toJSONObject","stack","visit","source","reducedValue","isThenable","then","catch","AxiosError","message","code","config","request","response","captureStackTrace","utils","toJSON","description","number","fileName","lineNumber","columnNumber","status","from","error","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","map","token","join","predicates","test","formData","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","JSON","stringify","some","isFlatArray","el","index","exposedHelpers","build","pop","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","encode","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","hasStandardBrowserEnv","product","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","data","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","platform","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","parse","e","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","get","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","first","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","write","expires","domain","secure","cookie","Date","toGMTString","read","RegExp","decodeURIComponent","remove","now","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","knownAdapters","http","xhr","XMLHttpRequest","Promise","resolve","reject","requestData","requestHeaders","onCanceled","withXSRFToken","cancelToken","unsubscribe","signal","removeEventListener","Boolean","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","ERR_BAD_REQUEST","floor","settle","err","responseText","statusText","open","paramsSerializer","onreadystatechange","readyState","responseURL","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","isURLSameOrigin","xsrfValue","cookies","setRequestHeader","withCredentials","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","parseProtocol","send","renderReason","reason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","_request","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","c","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","toFormData","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","nameRe","nameReJsx","emptyOptions","jsx","re","empty","Schema","property","normal","space","definitions","Info","attribute","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","DefinedInfo","mask","super","mark","check","values","own","definition","properties","info","transform","attributes","includes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","start","step","style","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","$0","camelcase","hastToReact","point","pointStart","node","column","pos","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","ruleId","parent","fatal","file","actual","expected","note","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","developmentCreate","jsxs","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","createElementProps","createChildren","child","addNode","addChildren","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","Type","rest","dashes","find","isNaN","settings","padRight","padLeft","styleObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","items","parameters","chunkStart","subtokenize","events","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","syntaxExtension","extension","hook","left","right","constructs","existing","before","add","unicodePunctuationInternal","regexCheck","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","shift","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","unicodePunctuation","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","extensions","combineExtensions","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","ceil","preprocess","combined","remarkParse","doc","deserialize","serialized","$","out","unpair","flags","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","json","lossy","strict","valueOf","serializer","structuredClone","any","normalizeUri","skip","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","reverse","factory","parents","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","lines","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","trough","pipeline","middlewareIndex","output","middleware","wrapped","fnExpectsCallback","middelware","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","lastIndexOf","normalizeString","sep","proc","cwd","isUrl","fileUrlOrPath","urlToPath","URL","third","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","func","setPrototypeOf","names","p","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign","FetchLatestMdOne","fileData","setFileData","useState","useEffect","allMdFiles","queue","currentUrl","files","fetchFiles","mdFiles","latestFile","reduce","download_url","ReactMarkdown","Head","IndexPage","Layout","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","whitespace","errorsList","msg","filename","silent","comments","decl","decls","declarations","__importDefault","mod","__esModule","inline_style_parser_1","hasIterator"],"sourceRoot":""}